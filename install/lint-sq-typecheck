#!/usr/bin/env bash

echo "Running $(basename ${0}) ..."

set -eo pipefail

cd /mnt/input

curl -LOJs https://raw.githubusercontent.com/seqsense/ros_style/master/mypy.ini
trap 'rm -f mypy.ini' EXIT

cmd="mypy --config-file mypy.ini --scripts-are-modules"

# Function to check if file is Python
is_python_file() {
  local file="$1"
  if [ ! -f "$file" ]; then
    return 1
  fi
  local filetype=$(file -b --mime-type "$file" 2>/dev/null)
  if echo "$filetype" | grep -qE "text/x-python|text/x-script.python"; then
    return 0
  fi
  # Also check by extension as fallback
  if [[ "$file" =~ \.py$ ]] || [[ "$file" =~ \.pyi$ ]]; then
    return 0
  fi
  return 1
}

# Function to find Python files in directory
find_python_files_in_dir() {
  local dir="$1"
  find "$dir" -type f -not -path '*/\.git/*' -not -path '*/__pycache__/*' -not -path '*/\.mypy_cache/*' 2>/dev/null | while read -r file; do
    if is_python_file "$file"; then
      echo "$file"
    fi
  done
}

python_files=()

if [ $# -eq 0 ]; then
  # No arguments, scan current directory
  while IFS= read -r file; do
    python_files+=("$file")
  done < <(find_python_files_in_dir ".")
else
  # Process each argument
  for arg in "$@"; do
    if [ -f "$arg" ]; then
      # It's a file - check if it's Python
      if is_python_file "$arg"; then
        python_files+=("$arg")
      fi
    elif [ -d "$arg" ]; then
      # It's a directory - recursively find Python files
      while IFS= read -r file; do
        python_files+=("$file")
      done < <(find_python_files_in_dir "$arg")
    else
      echo "Warning: '$arg' is neither a file nor a directory, skipping"
    fi
  done
fi

echo " - Found ${#python_files[@]} python file(s)"
if [ ${#python_files[@]} -eq 0 ]; then
    echo -e " - [\e[32mPASSED\e[0m]"
    exit 0
fi

# install explicitly listed type stub packages
if [ -f ".mypy-stub-pkgs" ]; then
    pip install -r .mypy-stub-pkgs
fi

# workaround to get mypy to figure out the types it should install
# note that it does not upgrade already installed packages
$(echo "${cmd} ${python_files[@]}") >/dev/null 2>/dev/null || true
mypy --install-types --non-interactive

output="$(${cmd} ${python_files[@]} | tee /dev/stderr)"
result="$(echo "${output}" | tail -n 1)"

echo "${output}" | sed -n 's|^\(\S\+\):\([0-9]\+\):\([0-9]\+\): error: \(.*\)$|::error file=\1,line=\2,col=\3::\4|p'

if [[ -n "$result" ]]; then
    error="$(echo $result | awk '/^Found/{print $2}')"
    if [[ -z "$error" ]]; then
        echo -e " - [\e[32mPASSED\e[0m]"
        exit 0
    fi
fi
echo -e " - [\e[31mFAILED\e[0m]"
exit 1
